/*
작성자 : 이상수
일시 : 2021.02.25
제목 : 타일 채우기 - 2133
풀이 : 이 문제는 새로운 타일에 어떤 타일이 붙을 수 있는지를 먼저 생각해보는
	   DP적 접근이 필요하다.
	   우선 3*2 타일이 3가지 종류로 붙을 수 있고
	   그 뒤로
	   3*4 타일 2가지
	   3*6 타일 2가지
	   3*8 타일 2가지
	   ...
	   이렇듯 짝수 크기의 타일들이 달라붙을 수 있다.
	   홀수 크기의 타일은 짝수 크기의 타일로 완전히 매꿀수 없기 때문에 0이며

	   짝수 크기의 타일은 위 짝수 타일들이 달라붙을 수 없는 크기를 판단하여
	   붙을 수 있을때까지는 계속해서 붙어야 한다.

	   현재 크기를 계산하는 방법
	   1. n이라면 d[n-2] 에 3*2 크기의 타일 3가지 경우가 달라 붙을 수 있으므로
		  d[n-2] * 3이 된다.
	   2. 이 때에 4, 6, 8, ... 에서 나오는 특이케이스 들이 있다.
	      이 모습은 그림을 그려보면 나온다. 이 특이 케이스들에 대해 +2를 해주어야 한다.

		  즉 d[4]는 d[2] * 3 으로 9로 끝나는게 아니라 특이 케이스가 존재해서 + 2를 해줘야 한다.
	   3. 이렇게 처리하고 나면 3*2 크기의 타일이 새롭게 달라붙고, 특이케이스가 나온다는
	      값은 처리가 완료 되었다.
	   4. 하지만, d[6]을 처리한다고 할 때 이렇게만 처리하면 아직 처리하지 않은게 남게된다.

	   5. 바로 d[4]에 3*2를 붙였지만, 반대로 3*2에 d[4]를 붙이는 경우는 빼먹었기 때문이다.

	   6. 이를 위해 d[4] * d[2] 와 d[2] * d[4]에서 중복되는 부분은 빼고 나머지를 더해줘야 한다.

	   7. 그 나머지가 특이케이스가 왼쪽이 아닌 오른쪽에 붙는 경우이다.

	   8. 특이케이스는 2가지가 있고 기존의 경우에 경우의수가 만들어져서 더해지면 된다.

	   (2 * d[i - j] ==> (i-j의 특이케이스) * (그에 따른 경우의 수))
*/

#include<iostream>

using namespace std;

int n;
int d[31];

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	cin >> n;

	d[2] = 3;
	for (int i = 4; i <= n; i += 2) {
		d[i] += d[i - 2] * d[2];
		for (int j = 4; j < i; j += 2) {
			d[i] += 2 * d[i - j];
		}
		d[i] += 2;
	}

	cout << d[n];
}