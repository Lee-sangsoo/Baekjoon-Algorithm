/*
작성자 : 이상수
일시 : 2021.02.15
제목 : 1 - 4375
풀이 : 수의 나머지를 구해야 하는데 1, 11, 111, 1111, 11111, .... 와 같이
       값이 계속해서 증가하다 보면 이 값이 얼마나 커질지 모른다.
	   그래서 실제로 수를 구해서 처리하려고 하면
	   BitInteger를 만들어야 하기 때문에 문제가 되며, 파이썬의 경우에도
	   수를 구하는건 가능하지만 그 시간이 어마무시하게 걸린다.

	   그렇기 때문에 나머지를 사용해야 한다.

	   실제 수가 중요한게 아니라 나머지가 0인지만 확인하는 배수문제이기 때문에
	   각 단계의 나머지를 확인하여 풀이하면 된다.

	   다시 말해
	   1 % 3 = 1 
	   11 % 3 = (1*10 + 1)%3 = (1%3 * 10 + 1)%3 과 같다.

	   이를 구현하면 된다.
	   (매번 연산시에 N에 대해서만 나머지 연산을 진행하게 되면
	      나머지의 범위가 N 사이에서 변하지 않게 되므로 큰 수가 필요없다)


	   (A * B) % N 은 다음과 같다
	   1. ((A % N) * (B % N)) % N
	   2. ((A % N) * B) % N
	   3. (A * (B % N)) % N
*/
#include <iostream>

using namespace std;

int main() {
	int n;
	while (cin >> n) {
		int cur = 1 % n;
		for (int i = 1; ; i++) {
			if (cur == 0) {
				cout << i << '\n';
				break;
			}
			cur = (cur * 10 + 1) % n;
		}
	}
}