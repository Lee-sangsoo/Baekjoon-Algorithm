/*
작성자 : 이광민
일시 : 2021.06.16
제목 : 1089 - 스타트링크 타워
풀이 : 실수 몇가지와 생각할것이 있어 조금 걸린 문제
       우선 실수에 대해 정리하자면
	   1. 정답 출력이 소수인데 오차범위를 지키지 않았다. (cout.precision() 로 해결)
	   2. 정답이 없는 경우를 잘못 생각했다 (total이 비어있는 경우 -1을 했으나 정상적인 전구들과 함께 있는 경우 실패 -> [1][n], [3][n]을 확인해서 -1 출력 (n은 1 ~ +4씩))

	   생각할 것은 total에 여러 값들을 담아서 어떻게 한번에 그 값을 출력을 할 것인가를 정해야 했다.
	   이 경우는 다음과 같이 생각했다.
	   10의 자리수가 n1, n2, n3라면 n1, n2, n3의 값을 모두 더해서 한번에 자릿수를 곱해버리면 총 합을 쉽게 구할 수 있지 않을까 라는 생각이 들었다.
	   이를 위해 각 자리수가 몇번 곱해지고 더해지는지를 구해야 하고 그 경우는 다음과 같다.
	   ans += tmp_sum * num * (tmp_cnt/ total[i].size());
	   총합 += 현재 자리수의 숫자 총합 * 자릿수(10, 100, 1000, ...) * (최종적으로 만들어지는 숫자 갯수 / 현재 자릿수의 갯수)

	   이렇게 처리하면 정확한 합이 나오고 최종적으로 만들어지는 숫자의 갯수로 이를 나누면 답이된다.

	   a배열(각 숫자의 전구 베이스 상태)과 b배열(입력)을 가지고
	   a가 '.'인데 b가 '#'이면 이는 불가능한 경우이다. (없는 전구를 만들 수 없기 때문)
	   이 경우를 제외하고 나머지 경우는 가능하기 때문에 모든 검사를 통과한 숫자들은 total에 넣어주도록 하자.
*/
#include<iostream>
#include<string>
#include<vector>

using namespace std;

char a[10][5][3] = { 
	{{'#','#','#'},
	 {'#','.','#'},
	 {'#','.','#'},
	 {'#','.','#'},
	 {'#','#','#'}},

	{{'.','.','#'},
	 {'.','.','#'},
	 {'.','.','#'},
	 {'.','.','#'},
	 {'.','.','#'}},

	{{'#','#','#'},
	 {'.','.','#'},
	 {'#','#','#'},
	 {'#','.','.'},
	 {'#','#','#'}},

	{{'#','#','#'},
	 {'.','.','#'},
	 {'#','#','#'},
	 {'.','.','#'},
	 {'#','#','#'}},

	{{'#','.','#'},
	 {'#','.','#'},
	 {'#','#','#'},
	 {'.','.','#'},
	 {'.','.','#'}},

	{{'#','#','#'},
	 {'#','.','.'},
	 {'#','#','#'},
	 {'.','.','#'},
	 {'#','#','#'}},

	{{'#','#','#'},
	 {'#','.','.'},
	 {'#','#','#'},
	 {'#','.','#'},
	 {'#','#','#'}},

	{{'#','#','#'},
	 {'.','.','#'},
	 {'.','.','#'},
	 {'.','.','#'},
	 {'.','.','#'}},

	{{'#','#','#'},
	 {'#','.','#'},
	 {'#','#','#'},
	 {'#','.','#'},
	 {'#','#','#'}},

	{{'#','#','#'},
	 {'#','.','#'},
	 {'#','#','#'},
	 {'.','.','#'},
	 {'#','#','#'}}
};
int n;
char b[50][50];


int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	cin >> n;
	for (int i = 0; i < 5; i++)
		for (int j = 0; j < 4 * n - 1; j++)
			cin >> b[i][j];

	int tt = 1;
	for (int i = 0; i < n; i++) {
		if (b[1][tt] == '#' || b[3][tt] == '#') {
			cout << -1;
			return 0;
		}
		tt += 4;
	}


	vector<vector<long long>> total;
	int cnt = 0;
	for (int k = 0; k < n; k++) {
		vector<long long> tmp;
		//cout << "k = " << k << '\n';
		for (int t = 0; t < 10; t++) {
			bool flag = true;
			for (int i = 0; i < 5; i++) {
				for (int j = cnt; j < cnt + 3; j++) {
					if (a[t][i][j % 4] == '.' && b[i][j] == '#') {
						flag = false;
						break;
					}
				}
				if (flag == false) break;
			}
			if (flag) {
				tmp.push_back(t);
				//cout << "input!!! " << t << '\n';
			}
		}
		cnt += 4;
		if(!tmp.empty()) total.push_back(tmp);
	}

	long long ans = 0;
	long long num = 1;
	cnt = 1;
	for (int i = 1; i < n; i++)
		num *= 10;
	for (int i = 0; i < total.size(); i++) {
		cnt *= total[i].size();
	}

	int tmp_cnt = cnt;
	for (int i = 0; i < total.size(); i++) {
		long long tmp_sum = 0;
		for (int j = 0; j < total[i].size(); j++) {
			tmp_sum += total[i][j];
		}
		ans += tmp_sum * num * (tmp_cnt/ total[i].size());
		num /= 10;
	}
	double mod = cnt;
	cout.precision(8);
	cout << ans / mod << '\n';
}