/*
작성자 : 이광민
일시 : 2021.06.16
제목 : 10422 - 괄호
풀이 : 길이가 N인 서로 다른 올바른 괄호 문자열의 개수를 찾는 문제.
       문제에서 무엇을 구해야 하는지 바로 말을 해준다. 이를 통해 점화식을 세워보면 다음과 같다.

	   D[N] = 길이가 N인 서로 다른 올바른 괄호 문자열

	   길이가 N인 어떤 괄호 문자열이 있을 때 이를 어떻게 구분지을 수 있을까?
	   문제에서 힌트를 주었듯이
	   올바른 괄호 문자열과 올바른 괄호 문자열을 합치면 이는 올바른 괄호 문자열이다.
	   이를 위해 다음과 같이 정의 할 수 있다.

	   D[N] = D[i - 2] * D[N - i]  (2 <= i <= N)
	   위 점화식을 설명하자면.
	   
	   ( '올바른 괄호 문자열' ) '올바른 괄호 문자열'
	   과 같이 정의할 수 있다.

	   총 길이가 N이고 닫히는 괄호의 위치를 i라고 할 때
	   i - 2 = 첫번째 올바른 괄호 문자열
	   N - i = 두번째 올바른 괄호 문자열
	   이라고 할 수 있다.
	   두가지 경우를 곱해주면 해당 경우의 수가 나오고
	   i를 2씩 증가시켜가며 처리해주면 최종 정답이 나온다.
	   (2 <= i <= N)
	   (헷갈린다면 그림을 그려보자)

	   과정 ====>
	   () (...)
	   (())(...), ()()(...), ...
	   ((()))(...), (())()(...), ()()()(...), ...
	   ...
	   (...)()
*/
#include <iostream>
#include <algorithm>

using namespace std;

int t;
long long m = 1000000007;
long long d[5001];

int main() {
	ios_base::sync_with_stdio(false); cin.tie(NULL);
	cin >> t;

	d[0] = 1;
	d[2] = 1;
	for (int i = 4; i <= 5000; i += 2) {
		for (int j = 2; j <= i; j += 2) {
			d[i] += (d[j - 2] * d[i - j]);
			d[i] %= m;
		}
	}

	while (t--) {
		int n;
		cin >> n;
		cout << d[n] << '\n';
	}
}